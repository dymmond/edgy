[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "edgy"
description = "ðŸ”¥ The perfect ORM to work with complex databases ðŸ”¥"
long_description = "ðŸ”¥ The perfect ORM to work with complex databases ðŸ”¥"
readme = "README.md"
requires-python = ">=3.8"
dynamic = ['version']
license = "MIT"
authors = [{ name = "Tiago Silva", email = "tiago.arasilva@gmail.com" }]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: AnyIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
]
dependencies = [
    "orjson",
    "alembic>=1.11.3,<2.0.0",
    "click>=8.1.3,<9.0.0",
    "databasez>=0.10.3",
    "loguru>=0.7.0,<0.10.0",
    "pydantic>=2.5.3,<3.0.0",
    "pydantic-settings>=2.0.0,<3.0.0",
    "rich>=13.3.1,<14.0.0",
    "blinker>=1.8,<2.0",
]
keywords = [
    "api",
    "rest",
    "http",
    "asgi",
    "pydantic",
    "starlette",
    "fastapi",
    "framework",
    "esmerald",
    "orm",
]

[project.urls]
Homepage = "https://github.com/dymmond/edgy"
Documentation = "https://edgyorm.tarsild.io"
Changelog = "https://edgyorm.tarsild.io/release-notes/"
Funding = "https://github.com/sponsors/tarsil"
Source = "https://github.com/dymmond/edgy"

[project.scripts]
edgy = "edgy.__main__:run_cli"

[project.optional-dependencies]

# we need it anyway in databasez
test = ["sqlalchemy_utils>=0.41.1"]
testing = [
    "anyio>=4.0.0,<5",
    "asyncpg>=0.27.0,<1",
    "asyncmy>=0.2.7,<0.3.0",
    "esmerald[test]>=3.2.0",
    "pytest-timeout",
    "ipdb",
    "pytest-mock",
    "mypy==1.10.0",
    "httpx",
    "types-orjson==3.6.2",
    "backports.zoneinfo;python_version<'3.9'"
]
mime = ["python-magic"]
image = ["pillow"]
postgres = ["databasez[postgresql]"]
mysql = ["databasez[mysql]"]
sqlite = ["databasez[sqlite]"]
mssql = ["databasez[aioodbc]"]
jdbc = ["databasez[jdbc]"]
# all except testing
all = ["edgy[test,mime,image,postgres,mysql,sqlite,mssql,jdbc]", "ipython", "ptpython"]

[tool.hatch.envs.default]
dependencies = ["pre-commit>=2.17.0,<4.0.0", "edgy[sqlite]"]

[tool.hatch.envs.default.scripts]
clean_pyc = "find . -type f -name \"*.pyc\" -delete"
clean_pycache = "find . -type d -name \"*__pycache__*\" -delete"
lint = "hatch fmt {args}; hatch run test:check_types"


[tool.hatch.envs.docs]
dependencies = [
    "griffe-typingdoc>=0.2.2",
    "mkautodoc>=0.2.0,<0.3.0",
    "mkdocs>=1.1.2,<2.0.0",
    "mkdocs-material>=9.4.4,<10.0.0",
    "mdx-include>=1.4.2,<2.0.0",
    "mkdocs-macros-plugin>=1.0.0,<2.0.0",
    "mkdocs-meta-descriptions-plugin>=2.3.0",
    "mkdocstrings[python]>=0.23.0,<0.30.0",
    "pyyaml>=6.0,<7.0.0",
]
[tool.hatch.envs.docs.scripts]
build = "mkdocs build"
serve = "mkdocs serve --dev-addr localhost:8000"


[tool.hatch.envs.test]
# required for cli tests and check_types
features = ["all", "testing"]


[tool.hatch.envs.test.env-vars]
EDGY_TESTCLIENT_TEST_PREFIX = ""
EDGY_TESTCLIENT_USE_EXISTING = "true"


[tool.hatch.envs.test.scripts]
check_types = "mypy -p edgy"

[tool.hatch.envs.hatch-test]
# needs docker services running
features = ["all", "testing"]


[tool.hatch.envs.hatch-test.env-vars]
EDGY_TESTCLIENT_TEST_PREFIX = ""
EDGY_TESTCLIENT_USE_EXISTING = "true"


[tool.hatch.version]
path = "edgy/__init__.py"


[tool.mypy]
plugins = [
  "pydantic.mypy"
]

warn_unused_configs = true
warn_unreachable = true
warn_return_any = true
strict = true
disallow_untyped_decorators = true
disallow_any_generics = false
implicit_reexport = false
no_implicit_optional = false
show_error_codes = true
disallow_incomplete_defs = true
disable_error_code = "attr-defined,arg-type,override,misc"
warn_unused_ignores = true
warn_redundant_casts = true

[tool.ruff]
line-length = 99
fix = true

[tool.ruff.lint]
select = ["E", "W", "F", "C", "B", "I", "UP", "SIM"]
ignore = ["E501", "B008", "C901", "B026", "SIM115"]
exclude = ["docs_src/*"]

[tool.ruff.lint.isort]
known-third-party = ["esmerald", "pydantic", "starlette", "databasez"]



[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true


[tool.ruff.lint.pycodestyle]
max-line-length = 99
max-doc-length = 120

[[tool.mypy.overrides]]
module = "edgy.tests.*"
ignore_missing_imports = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "sqlalchemy.*",
    "asyncpg",
    "alembic",
    "ptpython.*",
]
ignore_missing_imports = true
ignore_errors = true

[[tool.mypy.overrides]]
module = "docs_src.*"
ignore_errors = true

[tool.pytest.ini_options]
timeout = 30
addopts = ["--strict-config", "--strict-markers", "--pdbcls=IPython.terminal.debugger:Pdb"]
xfail_strict = true
junit_family = "xunit2"

[tool.hatch.build.targets.sdist]
include = ["/edgy"]
